buildscript {
    repositories {
        mavenCentral()
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies { classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT' }
}

apply plugin: 'forge'
apply plugin: 'curseforge'

group = 'tterrag.difficultyrecipes'
archivesBaseName = "DifficultyRecipes"
def buildNum = System.getenv().BUILD_NUMBER
version = "MC${minecraft_version}-${mod_version}-${buildNum}"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = 'run'
    
    replace "@VERSION@", project.version
    replaceIn "DifficultyRecipes.java"
}

repositories {
    maven { // ttCore
        name 'tterrag Repo'
        url "http://maven.tterrag.com"
    }
    maven { // NEI
        name = "chickenbones"
        url = "http://chickenbones.net/maven/"
    }
    maven { // CCL
        name 'ForgeFS'
        url 'http://files.minecraftforge.net/maven'
    }
}

dependencies {
    compile "tterrag.core:ttCore:${ttCore_version}:deobf"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.110:dev"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.138:dev"
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

tasks.build.dependsOn deobfJar

curse {
    dependsOn 'reobf'
    mustRunAfter 'publish'
    onlyIf { return project.hasProperty('curseforge_key') }

    if (project.hasProperty('curseforge_key')) apiKey = project.curseforge_key
    projectId = project.curse_projectId
    displayName = "ttCore ${mod_version}-${buildNum}"
    changelog = project.hasProperty('changelog') ? project.changelog : ''
    releaseType = project.curse_filetype
}
